

//include ':customviewdir:touchevent'
//include ':startmodeup'//include ':performance:perform'
//include ':jetpackapp'
// include ':performance:performapp'


//include 'MemoryLeak:memoryleak1'

//include(
////        ':bitmap:app', ':bitmap:bigimage',
//        ':bitmap:bitmapdemo')

include ':leetcode'

//include (':pullrefresh:meituanrefreshlistview'
//        ,':pullrefresh:xrecyclerview'
//        ,':pullrefresh:xrefreshviewapp'
//        ,':pullrefresh:chromelikeapp'
//        ,':pullrefresh:chromelikeswipelayout'
//        ,':pullrefresh:autohomerefreshlistview')


//include (
//        'material:modespec',
//        'material:materialdesign',
//        'material:constraintlayoutdemo'
//)

// include ':material:behaviordemo' //不能运行

//include(':flexboxs:demo-cat-gallery'
//        , ':flexboxs:demo-playground'
//        , ':flexboxs:flexbox')
//include (':okhttp:app'
//        , ':okhttp:okhttp3'
//        , ':okhttp:interceptor')

//include(':fragmentations:eventbus_activity_scope'
//        , ':fragmentations:demo'
//        , ':fragmentations:fragmentation_core'
//        , ':fragmentations:fragmentation'
//        , ':fragmentations:fragmentation_swipeback')

//include(':recyclerview:leo_slidecard', ':recyclerview:leo_Recycler', ':recyclerview:leo_RecyclerView')
//include ':fish'

//include (':leo_dispatch:app'
//    , ':leo_dispatch:srl_vp'
//    , ':leo_dispatch:scrollview_clash'
//    , ':leo_dispatch:clickevent')

//include ':xplay4'
//include ':xplay3'
//include ':xplay2'
//include ':xplay'
//include ':testopenles'
//include ':testopensl'
//include ':ffmpeg2'
//include ':testffmpeg'
//include ':ffmpeg'


//include ':photoview'
//include ':javalib'
//include ':rxjava207'
//include ':rxjava1'

//include ':flowlayout'
//include ':viewpagerdemo'
//include ':touchevent'
//include ':hotfix'
//include ':dialogs'
//include ':html'
//include ':webview'
//include ':lib'
//include ':recyclerview'
//include(
//        ':javapoet:app2'
//        , ':javapoet:personal'
//        , ':javapoet:order'
//        , ':javapoet:common'
//        , ':javapoet:arouter_api'
//        , ':javapoet:arouter_compiler'
//        , ':javapoet:arouter_annotation'
//)
//include ':CustomView'
//include ':toolbar'
//include ':anrwatchdog'
//include ':lottie'
//include ':app'
rootProject.name = "AndroidHelper"

//include ':jetpackdir:jetpackapp2'
//include ':jetpackdir:databinding'
//include ':lauchmode'
//include ':whale'
//include ':leakcanary22'
//include ':customviewdir:listviewdemo'
include ':edittextselection'


include ':multilanguage'

println("[life-cycle]  我是settings.gradle 我的工程路径是${rootProject.projectDir}")

/**
 [life-cycle]  我是settings.gradle
 [life-cycle] 初始化阶段完成
 [lefe-cycle] projectsLoaded
 MyPlugin apply(Project)
 [lefe-cycle] 配置阶段完成
 [lefe-cycle] 构建结束
 */
// 添加构建的生命周期监听
gradle.addBuildListener(new BuildAdapter() {
    @Override
    void buildStarted(Gradle gradle) {
        super.buildStarted(gradle)
        println("[lefe-cycle] 构建开始") // 构建开始
    }

    @Override
    void settingsEvaluated(Settings settings) {
        super.settingsEvaluated(settings)
        println("[life-cycle] 初始化阶段完成")
    }

    @Override
    void projectsEvaluated(Gradle gradle) {
        super.projectsEvaluated(gradle)
        println("[lefe-cycle] 配置阶段完成")
        // 拿到所有子工程
        gradle.rootProject.childProjects.each {name, p ->
            println("【子工程】名称是-$name ，路径是-${p.getProjectDir()}")
        }

    }

    @Override
    void buildFinished(BuildResult result) {
        super.buildFinished(result)
        println("[lefe-cycle] 构建结束")
    }

    @Override
    public void beforeSettings(Settings settings) {
        println("[lefe-cycle] beforeSettings")
    }

    @Override
    public void projectsLoaded(Gradle gradle) {
        println("[lefe-cycle] projectsLoaded")
    }
})

/*
flannery@zhaojiandeMacBook-Pro AndroidHelper % ./gradlew testTask -q
[life-cycle]  我是settings.gradle 我的工程路径是/Users/flannery/Desktop/AndroidHelper
[life-cycle] 初始化阶段完成
[lefe-cycle] projectsLoaded
[life-cycle] 我是根目录的build.gradle
MyPlugin apply(Project)
[life-cycle] 我是edittextselectsion的build.gradle
[life-cycle] 我是leetcode的build.gradle
[life-cycle] 我是multilanguage的build.gradle
[lefe-cycle] 配置阶段完成
【子工程】名称是-edittextselection ，路径是-/Users/flannery/Desktop/AndroidHelper/edittextselection
【子工程】名称是-leetcode ，路径是-/Users/flannery/Desktop/AndroidHelper/leetcode
【子工程】名称是-multilanguage ，路径是-/Users/flannery/Desktop/AndroidHelper/multilanguage
[life-cycle] 我是任务中的代码testTask
[lefe-cycle] 构建结束
flannery@zhaojiandeMacBook-Pro AndroidHelper %
flannery@zhaojiandeMacBook-Pro AndroidHelper %
flannery@zhaojiandeMacBook-Pro AndroidHelper %
flannery@zhaojiandeMacBook-Pro AndroidHelper %
flannery@zhaojiandeMacBook-Pro AndroidHelper %
flannery@zhaojiandeMacBook-Pro AndroidHelper %
flannery@zhaojiandeMacBook-Pro AndroidHelper %
flannery@zhaojiandeMacBook-Pro AndroidHelper % ./gradlew testTask -q
[life-cycle]  我是settings.gradle 我的工程路径是/Users/flannery/Desktop/AndroidHelper
[life-cycle] 初始化阶段完成
[lefe-cycle] projectsLoaded
[life-cycle] 我是根目录的build.gradle
MyPlugin apply(Project)
[life-cycle] 我是edittextselectsion的build.gradle
[life-cycle] 我是leetcode的build.gradle
[life-cycle] 我是multilanguage的build.gradle
[我是app子工程] 我的工程路径是/Users/flannery/Desktop/AndroidHelper/multilanguage
[lefe-cycle] 配置阶段完成
【子工程】名称是-edittextselection ，路径是-/Users/flannery/Desktop/AndroidHelper/edittextselection
【子工程】名称是-leetcode ，路径是-/Users/flannery/Desktop/AndroidHelper/leetcode
【子工程】名称是-multilanguage ，路径是-/Users/flannery/Desktop/AndroidHelper/multilanguage
[life-cycle] 我是任务中的代码testTask
[lefe-cycle] 构建结束
flannery@zhaojiandeMacBook-Pro AndroidHelper % ./gradlew testTask -q
[life-cycle]  我是settings.gradle 我的工程路径是/Users/flannery/Desktop/AndroidHelper
[life-cycle] 初始化阶段完成
[lefe-cycle] projectsLoaded
[life-cycle] 我是根目录的build.gradle
MyPlugin apply(Project)
[life-cycle] 我是edittextselectsion的build.gradle
[life-cycle] 我是leetcode的build.gradle
[life-cycle] 我是multilanguage的build.gradle
[我是app子工程] 我的工程路径是/Users/flannery/Desktop/AndroidHelper/multilanguage
[lefe-cycle] 配置阶段完成
【子工程】名称是-edittextselection ，路径是-/Users/flannery/Desktop/AndroidHelper/edittextselection
【子工程】名称是-leetcode ，路径是-/Users/flannery/Desktop/AndroidHelper/leetcode
【子工程】名称是-multilanguage ，路径是-/Users/flannery/Desktop/AndroidHelper/multilanguage
[life-cycle] 我是任务中的代码testTask
[lefe-cycle] 构建结束
 */

include ':gradletest'
