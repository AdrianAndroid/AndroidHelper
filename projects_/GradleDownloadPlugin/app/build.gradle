apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: com.duowan.efox.EfoxPlugin

String TAG = "app - [build.gradle]"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.joyy.gradledownloadplugin"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation project(path: ':library2')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation project(':library')
}

beforeEvaluate {
    println "app - [build.gradle] beforeEvaluate"
}
afterEvaluate {
    println "app - [build.gradle] afterEvaluate"
}
gradle.buildFinished {
    println "app - [build.gradle] gradle.buildFinished"
}

task taskX {
    setGroup("study")
    doLast {
        println "$TAG taskX doLast"
    }
    doFirst {
        println "$TAG taskX doFirst"
    }
}


task taskY {
    setGroup("study")
    doLast {
        println "$TAG taskY doLast"
    }
    doFirst {
        println "$TAG taskY doFirst"
    }
}


task taskZ(dependsOn: [taskY, taskX]) {
    setGroup("study")
    doLast {
        println "$TAG taskZ doLast"
    }
    doFirst {
        println "$TAG taskZ doFirst"
    }
}

task taskZ2() {
    setGroup("study")
    setDependsOn([taskY, taskX])
    doLast {
        println "$TAG taskZ doLast"
    }
    doFirst {
        println "$TAG taskZ doFirst"
    }
}

//tasks.findByPath("taskZ").dependsOn([taskY, taskX])
taskZ.mustRunAfter([taskY, taskX])

task taskTest {
    setGroup("study")
    setDependsOn([taskZ, taskY, taskX])
}